name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    defaults:
      run:
        working-directory: ./backend
    
    env:
      CI: true
      NODE_ENV: test
      CI_MODE: true
      OLLAMA_AVAILABLE: false
      CHROMA_AVAILABLE: false
      GOOGLE_OAUTH_AVAILABLE: false
      MCP_CALENDAR_AVAILABLE: false
      MCP_NOTION_AVAILABLE: false
      MCP_JIRA_AVAILABLE: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting (optional)
      run: |
        if npm run lint --silent 2>/dev/null; then
          npm run lint
        else
          echo "No lint script found, skipping linting"
        fi
      continue-on-error: true
    
    - name: Build TypeScript
      run: npm run build
    
    - name: Compile tests
      run: npx tsc -p tsconfig.test.json
    
    - name: Run tests with coverage
      run: npm test
      continue-on-error: false
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/coverage/lcov.info
        directory: ./backend/coverage/
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Upload coverage to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: backend/coverage/
        retention-days: 30
    
    - name: Security audit
      run: npm audit --audit-level moderate
      continue-on-error: true
    
    - name: Display coverage summary
      run: |
        if [ -f "coverage/coverage-summary.json" ]; then
          echo "## Coverage Summary" >> $GITHUB_STEP_SUMMARY
          if command -v jq &> /dev/null; then
            echo "| Metric | Percentage |" >> $GITHUB_STEP_SUMMARY
            echo "|--------|------------|" >> $GITHUB_STEP_SUMMARY
            jq -r '.total | "| Statements | \(.statements.pct)% |", "| Branches | \(.branches.pct)% |", "| Functions | \(.functions.pct)% |", "| Lines | \(.lines.pct)% |"' coverage/coverage-summary.json >> $GITHUB_STEP_SUMMARY
          else
            echo "Coverage report generated successfully" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "No coverage summary found" >> $GITHUB_STEP_SUMMARY
        fi

  build-check:
    runs-on: ubuntu-latest
    needs: test
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: npm run build
    
    - name: Check build artifacts
      run: |
        if [ -d "dist" ]; then
          echo "✅ Build artifacts created successfully"
          echo "📁 Build contents:"
          find dist -type f -name "*.js" | head -10
        else
          echo "❌ Build artifacts not found"
          exit 1
        fi