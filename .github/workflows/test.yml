name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./backend
    
    env:
      CI: true
      NODE_ENV: test
      CI_MODE: true
      OLLAMA_AVAILABLE: false
      CHROMA_AVAILABLE: false
      GOOGLE_OAUTH_AVAILABLE: false
      MCP_CALENDAR_AVAILABLE: false
      MCP_NOTION_AVAILABLE: false
      MCP_JIRA_AVAILABLE: false
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build TypeScript
      run: npm run build
    
    - name: Compile tests
      run: npx tsc -p tsconfig.test.json
    
    - name: Run tests
      run: npm test
      continue-on-error: false
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: success()
      with:
        file: ./backend/coverage/lcov.info
        directory: ./backend/coverage/
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = './backend/coverage/coverage-summary.json';
          
          if (fs.existsSync(path)) {
            const coverage = JSON.parse(fs.readFileSync(path, 'utf8'));
            const { statements, branches, functions, lines } = coverage.total;
            
            const comment = `## ðŸ“Š Coverage Report
            
            | Metric | Percentage |
            |--------|------------|
            | Statements | ${statements.pct}% |
            | Branches | ${branches.pct}% |
            | Functions | ${functions.pct}% |
            | Lines | ${lines.pct}% |
            
            Coverage report generated for commit ${context.sha}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }